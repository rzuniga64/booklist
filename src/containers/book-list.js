import React, { Component } from 'react';
import { connect } from 'react-redux';
import { selectBook } from '../actions/index';
import { bindActionCreators } from 'redux';

/**
 *  Application state generated by reducers.
 *  {    books: [ { title: ‘Harry Potter’ }, { title: ‘JavaScript” } ],	// Books Reducer
 *       activeBook: { title: ‘Javascript: The Good Parts” }		    // ActiveBook Reducer
 *  }
 */
class BookList extends Component {

    /**
     *  Helper function that creates a list of books. It maps over an array of books passed into this component.
     *  For each book in the array it creates a list item that contains the book's title.
     */
  renderList() {
    return this.props.books.map((book) => {
      return (
        <li className="list-group-item"
          key={book.title}
            /*Call the Action Creator with the book that was clicked on. */
          onClick={() => this.props.selectBook(book)}>
          {book.title}
        </li>
      );
    });
  }

    /**
     * Render a list of books.
     * @returns {XML}
     */
  render() {
    return (
      <ul className="list-group col-sm-4">
        {this.renderList()}
      </ul>
    )
  }
}

/**
 *  Map application state. Returns an object will show up as this.props inside of BookList.
 * @param state
 * @returns {{books: *}}
 */
function mapStateToProps(state) {
  return {
    books: state.books // create a property called books whose value is an array of books.
  };
}

/**
 * Anything returned from this function will end up as props on the BookList container
 * @param dispatch
 * @returns {{selectBook: selectBook}|B|N}
 */
function mapDispatchToProps(dispatch) {
  // Whenever selectBook is called, the result should be passed to all of our reducers
  return bindActionCreators({ selectBook: selectBook }, dispatch);
}

/**
 *  Promote BookList from a component to a container - it needs to know about this new dispatch method, selectBook.
 *  Make it available as a prop.
 */
export default connect(mapStateToProps, mapDispatchToProps)(BookList);
